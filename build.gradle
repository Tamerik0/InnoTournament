plugins {
    id 'dev.architectury.loom' version '1.10-SNAPSHOT' apply false
    id 'architectury-plugin' version '3.4-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '8.1.1' apply false
}
apply from: "config.gradle"
architectury {
    minecraft = project.minecraft_version
}

allprojects {
    group = rootProject.maven_group
    version = rootProject.mod_version
}

subprojects {
    apply plugin: 'dev.architectury.loom'
    apply plugin: 'architectury-plugin'
    apply plugin: 'maven-publish'

    base {
        archivesName = "$rootProject.archives_name-$project.name"
    }

    repositories {
        maven { url 'https://maven.nucleoid.xyz' }
    }

    dependencies {
        minecraft "net.minecraft:minecraft:$rootProject.minecraft_version"
        mappings loom.officialMojangMappings()
        compileOnly 'org.projectlombok:lombok:1.18.30'
        annotationProcessor 'org.projectlombok:lombok:1.18.30'
        implementation "dev.dominion.ecs:dominion-ecs-engine:0.9.0"
        if (project.name != "common") {
            include "dev.dominion.ecs:dominion-ecs-engine:0.9.0"
            include "dev.dominion.ecs:dominion-ecs-api:0.9.0"
        }
    }

    java {
        withSourcesJar()

        sourceCompatibility = JavaVersion.VERSION_21
        targetCompatibility = JavaVersion.VERSION_21

        // Ensure Gradle uses JDK 21 for compilation and runs (Minecraft 1.21.x requires Java 21)
        // This avoids using a newer system JDK (e.g., JDK 24) that can break annotation processors like Lombok
        toolchain {
            languageVersion = JavaLanguageVersion.of(21)
        }
    }

    tasks.withType(JavaCompile).configureEach {
        it.options.release = 21
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
                artifactId = base.archivesName.get()
                from components.java
            }
        }

        repositories {
        }
    }

    loom {
        runs {
            client {
                def overrideUsername = System.getProperty('username')
                if (project.name == "fabric") {
                    def user = overrideUsername ?: fabricUsername
                    programArgs '--username', user
                    vmArgs "-Dfabric.development.user.name=${user}"
                } else if (project.name == "neoforge" || project.name == "forge") {
                    def user = overrideUsername ?: forgeUsername
                    programArgs '--username', user
                }
            }
            server {
                vmArg "-Xmx20G"
            }
        }
    }
}
